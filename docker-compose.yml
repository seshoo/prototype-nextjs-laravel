# Версия docker-compose
version: "3"
# Список наших сервисов (контейнеров)
services:
  nginx-proxy:
    image: nginx:latest
    container_name: proxy
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      # - "443:443"
    volumes:
      - ./docker/nginx-proxy/conf.d/:/etc/nginx/conf.d/
    # nginx должен общаться с php контейнером

  nginx-backend:
    image: nginx:latest
    container_name: backend
    restart: unless-stopped
    tty: true
    ports:
      - "8090:80"
    volumes:
      - ./docker/nginx-backend/conf.d/:/etc/nginx/conf.d/
      - ./backend:/var/www
    # nginx должен общаться с php контейнером
    links:
      - php

  #Next.js Service
  nextjs:
    container_name: nextjs
    ports:
      - 3000:3000
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/usr/app
      - /usr/app/node_modules
      - /usr/app/.next

  #PHP Service
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: php:7.4-fpm
    container_name: php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./backend/:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    links:
      - mysql

  #MySQL Service
  mysql:
    image: mysql:5.7.24
    container_name: mysql
    command: "--default-authentication-plugin=mysql_native_password"
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
      MYSQL_ROOT_PASSWORD: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql/
      - ./docker/mysql/conf/my.cnf:/etc/mysql/my.cnf

# Версия docker-compose
version: "3"
# Список наших сервисов (контейнеров)
services:
  # Nginx
  nginx:
    image: nginx:1.21
    container_name: nginx
    ports:
      - "8081:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/logs:/var/log
      - ./backend/public:/var/www/public
    depends_on:
      - php
      - nextjs
    networks:
      - app

  #Next.js Service
  nextjs:
    container_name: nextjs
    ports:
      - "3000:3000"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/:/usr/app
      # - /usr/app/node_modules
      # - /usr/app/.next
    networks:
      - app

  #PHP Service
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: php:7.4-fpm
    container_name: php
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./backend/:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      - database
    networks:
      - app

  #MySQL Service
  database:
    image: mysql:5.7.24
    container_name: database
    command: "--default-authentication-plugin=mysql_native_password"
    restart: unless-stopped
    tty: true
    ports:
      - "8889:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
      MYSQL_ROOT_PASSWORD: laravel
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker/mysql/data:/var/lib/mysql/
      - ./docker/mysql/conf/my.cnf:/etc/mysql/my.cnf
    networks:
      - app

# Network.
networks:
  app:
    driver: bridge
